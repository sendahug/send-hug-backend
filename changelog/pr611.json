{
  "pr_number": 611,
  "changes": [
    {
      "change": "Features",
      "description": "Added a new configuration class to handle all the app's config and the setup of the database."
    },
    {
      "change": "Features",
      "description": "Added a new Database Controller class, which is responsible for setting up the database and the sessions for interacting with it, as well as performing the various CRUD operations the app performs."
    },
    {
      "change": "Changes",
      "description": "Replaced Flask-Migrate with pure Alembic (which Flask-Migrate uses under the hood to handle database migrations)."
    },
    {
      "change": "Changes",
      "description": "Replaced Flask-SQLAlchemy with pure SQLAlchemy. The models now use a new `BaseModel` class as the declarative base (as per SQLAlchemy guidelines), and the helper functions previously provided by Flask-SQLAlchemy (e.g., paginate) have been replaced with the new implementations in the database controller. The syntax of all queries has been updated appropriately."
    },
    {
      "change": "Changes",
      "description": "Moved all the helper methods from `db_helpers` to the new database controller class, as it makes more sense to keep all generic database functionality in one place."
    },
    {
      "change": "Changes",
      "description": "Bulk edit/delete operations (e.g., delete all posts, set all messages to 'deleted' by user) now use the SQLAlchemy constructs for building DELETE/UPDATE statements. Previously, they were handled on a row-by-row basis, which was extremely inefficient. Now, they're grouped together into single (or a couple of) statements, which simplifies the process and properly uses the database's abilities to handle bulk actions."
    },
    {
      "change": "Changes",
      "description": "All hug-related columns (sent/received hugs in users and posts) are now non-nullable (which they shouldn't have been in the first place)."
    }
  ]
}
